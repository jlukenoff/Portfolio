{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/ExpansionPanel/index.js","webpack:///./node_modules/@material-ui/core/esm/ExpansionPanelSummary/index.js","webpack:///./node_modules/@material-ui/core/esm/ExpansionPanelDetails/index.js","webpack:///./client/Components/Tech/Tech.jsx","webpack:///./node_modules/@material-ui/icons/ExpandMore.js"],"names":["useStyles","makeStyles","panelSummary","marginRight","panelSummaryContent","alignItems","panelsContainer","maxWidth","panelDetails","flexDirection","TechWidget","name","description","projectList","logoSrc","index","classes","useState","expanded","setExpanded","onChange","expandIcon","root","content","style","width","alt","src","className","variant","paddingTop","join","props","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","ModuleContainer","marginTop","padding","map","obj","i","key","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d"],"mappings":"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","file":"2.bundle.js","sourcesContent":["export { default } from './ExpansionPanel';","export { default } from './ExpansionPanelSummary';","export { default } from './ExpansionPanelDetails';","import React, { useState } from \"react\";\nimport ReactCSSTransitionsGroup from \"react-addons-css-transition-group\";\nimport { ModuleContainer } from \"../Styles/Styles\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  panelSummary: {\n    \"& img\": {\n      marginRight: \"10px\",\n    },\n  },\n  panelSummaryContent: {\n    alignItems: \"center\",\n  },\n  panelsContainer: {\n    maxWidth: \"600px\",\n  },\n  panelDetails: {\n    flexDirection: \"column\",\n  },\n});\n\nconst TechWidget = ({ name, description, projectList, logoSrc, index }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(index === 0);\n  return (\n    <ExpansionPanel expanded={expanded} onChange={() => setExpanded(!expanded)}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        classes={{\n          root: classes.panelSummary,\n          content: classes.panelSummaryContent,\n        }}\n      >\n        <img\n          style={{ width: \"35px\" }}\n          alt={`${name} logo`}\n          src={`https://storage.cloud.google.com/john-lukenoff-portoflio/static${logoSrc}`}\n        />\n        {name}\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.panelDetails}>\n        <Typography variant=\"body1\">{`\\t${description}`}</Typography>\n        <Typography variant=\"h6\" style={{ paddingTop: \"10px\" }}>\n          Projects:\n        </Typography>\n        <Typography variant=\"body1\">{projectList.join(\", \")}</Typography>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nconst Tech = (props) => {\n  const classes = useStyles();\n  return (\n    <ReactCSSTransitionsGroup\n      transitionName=\"module\"\n      transitionAppear\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}\n    >\n      <ModuleContainer style={{ marginTop: \"50px\" }}>\n        <Container className={classes.panelsContainer}>\n          <Typography variant=\"h2\" style={{ padding: \"20px 0\" }}>\n            Front End\n          </Typography>\n          {[\n            {\n              name: \"React / React Native\",\n              description:\n                \"React is my front-end framework of choice. I write very clean and modular components and exercise best practices in state management. I am fluent in modern features of React such as Hooks and Effects.\",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Vacation.ly\",\n                \"My Portfolio (this website!)\",\n                \"Shopr\",\n                \"Home automation server\",\n              ],\n              logoSrc: \"/react.svg\",\n            },\n\n            {\n              name: \"Styled Components\",\n              description:\n                \"I have leveraged Styled Components primarily through EmotionJS but also have experience with other JSS alternatives. I love Styled Components for the performance, consolidated structure it brings to React, and the portability provided when server-side rendering \",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Vacation.ly\",\n                \"My Portfolio (this website!)\",\n                \"Shopr\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/styled-components.png\",\n            },\n            {\n              name: \"HTML5\",\n              description:\n                \"I am comfortable developing in simple HTML/CSS/VanillaJS when appropriate. I am a strong believer in doing more with less by only leveraging third-party libraries and modules when necessary.\",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Vacation.ly\",\n                \"My Portfolio (this website!)\",\n                \"Shopr\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/html5.svg\",\n            },\n          ].map((obj, i) => (\n            <TechWidget {...obj} index={i} key={obj.name} />\n          ))}\n        </Container>\n      </ModuleContainer>\n      <ModuleContainer>\n        <Container className={classes.panelsContainer}>\n          <Typography variant=\"h2\" style={{ padding: \"20px 0\" }}>\n            Back End\n          </Typography>\n          {[\n            {\n              name: \"Typescript\",\n              description:\n                \"I prefer to write my backend code and scripts using the Typescript superset to ease development and guard the robustness of my applications. I enjoy building with Typescript because of the readability and stability throughout development it provides.\",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/typescript.svg\",\n            },\n            {\n              name: \"NodeJS\",\n              description:\n                \"I am most fluent in NodeJS as a backend language and also use NodeJS on the regular for quick scripts and making painstaking manual tasks into CLI's to automate workflows.\",\n              projectList: [\"Vacation.ly\", \"Shopr\", \"Home Automation Server\"],\n              logoSrc: \"/nodejs.svg\",\n            },\n            {\n              name: \"ExpressJS\",\n              description:\n                \"I have used ExpressJS in most of my applications that require a well-structured, scalable backend. I have a refined discipline for writing Express servers using MVC architecture. Leveraging best practices in separating of business logic, data models, and controllers\",\n              projectList: [\"Vacation.ly\", \"Shopr\", \"Home Automation Server\"],\n              logoSrc: \"/nodejs.svg\",\n            },\n            {\n              name: \"PostgreSQL\",\n              description:\n                \"I have used Postgres to add persistence to applications that require relational data models or read-heavy use-cases.\",\n              projectList: [\"Vacation.ly\", \"Shopr\", \"Home Automation Server\"],\n              logoSrc: \"/postgres.png\",\n            },\n            {\n              name: \"CassandraDB\",\n              description:\n                \"I have used Postgres to add persistence to applications that require relational data models or read-heavy use-cases.\",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Shopr\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/cassandra.png\",\n            },\n\n            {\n              name: \"MongoDB\",\n              description:\n                \"I've used mongoDB as a quick solution for adding a persistence layer on top of my application where relational data structures are not required.\",\n              projectList: [\"Vacation.ly\", \"Shopr\", \"Home Automation Server\"],\n              logoSrc: \"/mongodb.svg\",\n            },\n          ].map((obj, i) => (\n            <TechWidget {...obj} index={i} key={obj.name} />\n          ))}\n        </Container>\n      </ModuleContainer>\n      <ModuleContainer>\n        <Container className={classes.panelsContainer}>\n          <Typography variant=\"h2\" style={{ padding: \"20px 0\" }}>\n            Testing, Tooling, Deployment\n          </Typography>\n          {[\n            {\n              name: \"Jest\",\n              description:\n                \"Jest is my go-to framework for testing. I always ensure that the modules I build are well tested with an aim for 90%+ coverage.\",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Vacation.ly\",\n                \"My Portfolio (this website!)\",\n                \"Shopr\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/jest.svg\",\n            },\n            {\n              name: \"Docker\",\n              description:\n                \"I've used Docker in the deployment and development of almost every application I have developed. I choose Docker for the modularity and scalability it allows for. \",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Vacation.ly\",\n                \"My Portfolio (this website!)\",\n                \"Shopr\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/docker.svg\",\n            },\n            {\n              name: \"Git\",\n              description:\n                \"I always use git flows in my applications to manage changes and collaborate with others. I rely on best practices to organize the codebase and manage updates efficiently\",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Vacation.ly\",\n                \"My Portfolio (this website!)\",\n                \"Shopr\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/github.svg\",\n            },\n            {\n              name: \"Linux\",\n              description:\n                \"I also have experience deploying on bare metal instances and Alpine Linux environments\",\n              projectList: [\n                \"Narvar Internal Tooling\",\n                \"Vacation.ly\",\n                \"My Portfolio (this website!)\",\n                \"Home Automation Server\",\n              ],\n              logoSrc: \"/linux.svg\",\n            },\n          ].map((obj, i) => (\n            <TechWidget {...obj} index={i} key={obj.name} />\n          ))}\n        </Container>\n      </ModuleContainer>\n    </ReactCSSTransitionsGroup>\n  );\n};\n\n// Tech.propTypes = {\n// };\n\nexport default Tech;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;"],"sourceRoot":""}